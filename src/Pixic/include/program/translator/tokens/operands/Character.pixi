/*
(C) 2022-2023 Серый MLGamer. All freedoms preserved.
Videos at Дзен: <https://dzen.ru/seriy_mlgamer>
Music at SoundCloud: <https://soundcloud.com/seriy_mlgamer>
Videos at YouTube: <https://www.youtube.com/@Seriy_MLGamer>
Code at GitHub: <https://github.com/Seriy-MLGamer>
Me at ВКонтакте: <https://vkontakte.ru/seriy_mlgamer>
Material support at DonationAlerts: <https://www.donationalerts.com/r/seriy_mlgamer>
E-mail: <Seriy-MLGamer@yandex.ru>

This file is part of Pixic.
Pixic is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
Pixic is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
You should have received a copy of the GNU General Public License along with Pixic. If not, see <https://www.gnu.org/licenses/>.
*/

/**
 * @file program/translator/tokens/operands/Character.pixi
 * class Character extends Operand;
 *
 * Include before.
 * program/translator/tokens/operands/system/Operand.pixi
 * Dependencies.
 * program/translator/Parser.pixi
 * program/info/syntax errors.pixi
 * program/translator/generator.pixi
 * program/info/developer errors.pixi
 * program/translator/tokens/show.pixi
 */

fn Character_new($parser)
{
	$self=Operand_new(0, 0)
	$self.f=Character

	Parser_promise_position($parser)
	$self.text=$parser.text
	if Parser_get($parser)!='\''
	{
		Parser_reject_position($parser)

		remove($self)
		ret(-1)
	}
	Parser_resolve_position($parser)
	$self.character_start=$parser[0, $parser.top]
	$backslash=0
	while 1
	{
		$character=Parser_get($parser)
		if $backslash
		{
			$backslash=0
		}
		else{if $character=='\''
		{
			$self.character_length=$parser[0, $parser.top]-1-$self.character_start

			ret($self)
		}
		else{if $character=='\\'
		{
			$backslash=1
		}
		else{if $character==EOF
		{
			if $parser[1, $parser.top]==get_ysize($parser.lines)
			{
				$parser[1, $parser.top]-1
				syntax_error_expected($parser, '\'')
			}
		}}}}
	}
}
Character=clone(Operand)
Character.generate=Character_generate
Character.show=Character_show
Character.remove=Character_remove
fn Character_generate($self)
{
	generator_deinit()
	developer_error_not_implemented("character generation")
}
fn Character_show($self)
{
	begin_object()
		indent() logf("\"type\": \"Character\"") next_property()
		indent()
			$character=new($self.character_length, 1, INT8)
			copy($character, $self.text, 0, $self.character_start)
			logf("\"character\": \"%s\"", $character)
			remove($character)
	end_object()
}
fn Character_remove($self)
{
	remove($self)
}